// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package appsetup

import (
	"go.uber.org/zap"
	"mortezaalizadeh/prototype/src/shared/enterprise/configuration"
	"mortezaalizadeh/prototype/src/shared/enterprise/database"
	"mortezaalizadeh/prototype/src/shared/enterprise/database/postgres"
	"mortezaalizadeh/prototype/src/shared/enterprise/messaging/pulsar"
	"mortezaalizadeh/prototype/src/shared/enterprise/os"
	"mortezaalizadeh/prototype/src/shared/enterprise/time"
)

// Injectors from wire.go:

func NewConfigurationHelper(logger *zap.SugaredLogger) (configuration.ConfigurationHelper, error) {
	osHelper, err := os.NewOsHelper()
	if err != nil {
		return nil, err
	}
	configurationHelper, err := configuration.NewConfigurationHelper(logger, osHelper)
	if err != nil {
		return nil, err
	}
	return configurationHelper, nil
}

func NewTimeHelper() (time.TimeHelper, error) {
	timeHelper, err := time.NewTimeHelper()
	if err != nil {
		return nil, err
	}
	return timeHelper, nil
}

func NewDatabase(logger *zap.SugaredLogger, postgresConfig postgres.PostgresConfig) (database.Database, error) {
	databaseDatabase, err := postgres.NewPostgres(logger, postgresConfig)
	if err != nil {
		return nil, err
	}
	return databaseDatabase, nil
}

func NewOsHelper() (os.OsHelper, error) {
	osHelper, err := os.NewOsHelper()
	if err != nil {
		return nil, err
	}
	return osHelper, nil
}

func NewPulsarClient(logger *zap.SugaredLogger, pulsarConfig pulsar.PulsarConfig) (pulsar.PulsarClient, error) {
	osHelper, err := os.NewOsHelper()
	if err != nil {
		return nil, err
	}
	pulsarClient, err := pulsar.NewPulsarClient(logger, pulsarConfig, osHelper)
	if err != nil {
		return nil, err
	}
	return pulsarClient, nil
}
